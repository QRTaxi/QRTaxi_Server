name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: write env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "NCP_CLIENT_ID=${{ secrets.NCP_CLIENT_ID }}" >> .env
          echo "NCP_CLIENT_SECRET=${{ secrets.NCP_CLIENT_SECRET }}" >> .env
          echo "S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }}" >> .env
          echo "S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }}" >> .env
          echo "HASH_SALT=${{ secrets.HASH_SALT }}" >> .env
          echo "REDIS_CACHE_HOST=${{ secrets.REDIS_CACHE_HOST }}" >> .env
          echo "REDIS_CACHE_PORT=${{ secrets.REDIS_CACHE_PORT }}" >> .env
          echo "FIRE_BASE_JSON_KEY_PATH=${{ secrets.FIRE_BASE_JSON_KEY_PATH }}" >> .env
      - name: Set up and build Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose
          docker-compose build

      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Hub Push
        run: |
          docker-compose push

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.WAS_HOST }}
          username: ec2-user
          key: ${{ secrets.KEY }}
          source: docker-compose.yml
          target: /home/ec2-user/

      - name: Copy .env to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.WAS_HOST }}
          username: ec2-user
          key: ${{ secrets.KEY }}
          source: .env
          target: /home/ec2-user/

      - name: Connect and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.WAS_HOST }}
          username: ec2-user
          key: ${{ secrets.KEY }}
          script: |
            docker stop $(docker ps -a -q) 
            docker rm $(docker ps -a -q)
            cd /home/ec2-user/
            docker-compose pull  # Pull the latest images on EC2
            docker-compose up -d  # Run the containers on EC2